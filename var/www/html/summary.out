WHICH KERNEL WE CHOSE:

We have chosen to remain with the custom kernel. However, as can be seen
in summary.out, the benchmark had to be run four times. This is because
the benchmark process crashed due to low memory twice. As a result, I do
not feel supremely confident in the accuracy of the benchmark. We choose
the custom kernel on the basis of the reported latency figures being
about on par with the old kernel, and sometimes lower.





make[1]: Entering directory `/root/lmbench/lmbench-3.0-a8/results'

                 L M B E N C H  3 . 0   S U M M A R Y
                 ------------------------------------
		 (Alpha software, do not distribute)

Basic system parameters
------------------------------------------------------------------------------
Host                 OS Description              Mhz  tlb  cache  mem   scal
                                                     pages line   par   load
                                                           bytes  
--------- ------------- ----------------------- ---- ----- ----- ------ ----
cts4348-n Linux 2.6.18-        x86_64-linux-gnu 2670                       1
cts4348-n Linux 2.6.18-        x86_64-linux-gnu 1595    32    64 1.3100    1
cts4348-n Linux 2.6.18-        x86_64-linux-gnu 2670                       1
cts4348-n Linux 2.6.18-        x86_64-linux-gnu 6375                       1

Processor, Processes - times in microseconds - smaller is better
------------------------------------------------------------------------------
Host                 OS  Mhz null null      open slct sig  sig  fork exec sh  
                             call  I/O stat clos TCP  inst hndl proc proc proc
--------- ------------- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----
cts4348-n Linux 2.6.18- 2670 0.38 0.34 2.83 3.08 6.96 0.35 1.24 5379 10.K 19.K
cts4348-n Linux 2.6.18- 1595 0.47 0.57 2.93 4.57 6.84 0.56 2.18 5999 11.K 19.K
cts4348-n Linux 2.6.18- 2670 0.39 0.61 2.73 4.06 6.94 0.30 1.17 6162 10.K 19.K
cts4348-n Linux 2.6.18- 6375 0.42 0.63 2.71 4.92 7.02 0.58 2.11 3999 9579 17.K

Basic integer operations - times in nanoseconds - smaller is better
-------------------------------------------------------------------
Host                 OS  intgr intgr  intgr  intgr  intgr  
                          bit   add    mul    div    mod   
--------- ------------- ------ ------ ------ ------ ------ 
cts4348-n Linux 2.6.18- 0.6500 0.3300 0.2100   15.2   15.3
cts4348-n Linux 2.6.18- 0.6300 0.3200 0.2200   15.3   13.4
cts4348-n Linux 2.6.18- 0.6400 0.1900          15.6   14.7
cts4348-n Linux 2.6.18- 0.6300 0.3700 0.2000   18.3   14.1

Basic uint64 operations - times in nanoseconds - smaller is better
------------------------------------------------------------------
Host                 OS int64  int64  int64  int64  int64  
                         bit    add    mul    div    mod   
--------- ------------- ------ ------ ------ ------ ------ 
cts4348-n Linux 2.6.18-        0.3400                     
cts4348-n Linux 2.6.18-        0.2900                     
cts4348-n Linux 2.6.18-        0.3200                     
cts4348-n Linux 2.6.18-        0.3300                     

Basic float operations - times in nanoseconds - smaller is better
-----------------------------------------------------------------
Host                 OS  float  float  float  float
                         add    mul    div    bogo
--------- ------------- ------ ------ ------ ------ 
cts4348-n Linux 2.6.18- 1.9100 2.5000 9.5500 9.1700
cts4348-n Linux 2.6.18- 1.9300 2.6000   10.7 9.2000
cts4348-n Linux 2.6.18- 1.8300 2.6200 9.6900 8.8500
cts4348-n Linux 2.6.18- 1.3200 2.2200 5.2200 5.2000

Basic double operations - times in nanoseconds - smaller is better
------------------------------------------------------------------
Host                 OS  double double double double
                         add    mul    div    bogo
--------- ------------- ------  ------ ------ ------ 
cts4348-n Linux 2.6.18- 1.5500 2.4300   14.4   12.9
cts4348-n Linux 2.6.18- 1.8900 3.1700   14.5   14.0
cts4348-n Linux 2.6.18- 1.7000 3.1800   14.5   13.8
cts4348-n Linux 2.6.18- 1.1100 1.7600 8.4000 7.0900

Context switching - times in microseconds - smaller is better
-------------------------------------------------------------------------
Host                 OS  2p/0K 2p/16K 2p/64K 8p/16K 8p/64K 16p/16K 16p/64K
                         ctxsw  ctxsw  ctxsw ctxsw  ctxsw   ctxsw   ctxsw
--------- ------------- ------ ------ ------ ------ ------ ------- -------
cts4348-n Linux 2.6.18-                                                   
cts4348-n Linux 2.6.18-   89.5   87.1  108.7   81.4   85.9    69.0    70.1
cts4348-n Linux 2.6.18-                                                   
cts4348-n Linux 2.6.18-   79.5   75.2  123.2   64.5   75.9    54.3    49.1

*Local* Communication latencies in microseconds - smaller is better
---------------------------------------------------------------------
Host                 OS 2p/0K  Pipe AF     UDP  RPC/   TCP  RPC/ TCP
                        ctxsw       UNIX         UDP         TCP conn
--------- ------------- ----- ----- ---- ----- ----- ----- ----- ----
cts4348-n Linux 2.6.18-        12.7 168.                             
cts4348-n Linux 2.6.18-  89.5  16.0 164. 202.2 247.2 171.4 266.1 113.
cts4348-n Linux 2.6.18-        16.8 151.                             
cts4348-n Linux 2.6.18-  79.5  16.2 93.6 201.4 206.8 114.1 275.2  94.

*Remote* Communication latencies in microseconds - smaller is better
---------------------------------------------------------------------
Host                 OS   UDP  RPC/  TCP   RPC/ TCP
                               UDP         TCP  conn
--------- ------------- ----- ----- ----- ----- ----
cts4348-n Linux 2.6.18-                             
cts4348-n Linux 2.6.18-                             
cts4348-n Linux 2.6.18-                             
cts4348-n Linux 2.6.18-                             

File & VM system latencies in microseconds - smaller is better
-------------------------------------------------------------------------------
Host                 OS   0K File      10K File     Mmap    Prot   Page   100fd
                        Create Delete Create Delete Latency Fault  Fault  selct
--------- ------------- ------ ------ ------ ------ ------- ----- ------- -----
cts4348-n Linux 2.6.18-                                     1.867         2.762
cts4348-n Linux 2.6.18-   64.2   14.9  106.4   26.4   18.0K 3.855 8.84670 3.024
cts4348-n Linux 2.6.18-                                     3.309         2.831
cts4348-n Linux 2.6.18-   76.6   12.3  127.6   21.8   19.0K 5.185    11.5 2.870

*Local* Communication bandwidths in MB/s - bigger is better
-----------------------------------------------------------------------------
Host                OS  Pipe AF    TCP  File   Mmap  Bcopy  Bcopy  Mem   Mem
                             UNIX      reread reread (libc) (hand) read write
--------- ------------- ---- ---- ---- ------ ------ ------ ------ ---- -----
cts4348-n Linux 2.6.18-                                                      
cts4348-n Linux 2.6.18- 271. 1088 769. 2165.1 4195.0 2907.2 2684.7 3196 4628.
cts4348-n Linux 2.6.18-                                                      
cts4348-n Linux 2.6.18- 791. 952. 526. 2256.1 4474.7 2870.4 2632.2 3234 4573.

Memory latencies in nanoseconds - smaller is better
    (WARNING - may not be correct, check graphs)
------------------------------------------------------------------------------
Host                 OS   Mhz   L1 $   L2 $    Main mem    Rand mem    Guesses
--------- -------------   ---   ----   ----    --------    --------    -------
cts4348-n Linux 2.6.18-  2670     -      -           -    Bad mhz?
cts4348-n Linux 2.6.18-  1595 2.1610 6.3970   35.5       131.3
cts4348-n Linux 2.6.18-  2670     -      -           -    Bad mhz?
cts4348-n Linux 2.6.18-  6375 1.6730 5.0020   36.6       133.9
make[1]: Leaving directory `/root/lmbench/lmbench-3.0-a8/results'
